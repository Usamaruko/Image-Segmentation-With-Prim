ADT Graph{
数据对象：
    D = {v | v ∈ V}，其中 V 是顶点集合，v 是顶点，每个顶点代表图像中的一个像素点。
    E = {e | e ∈ Edge}，Edge 是边的集合，每条边代表两个像素点之间的连接。
数据关系：
    R = {<vi, vj, w> | vi, vj ∈ V, w ∈ W}，其中 W 是边的权重集合，<vi, vj, w> 表示顶点 vi 和 vj 之间的边及其权重。
基本运算：
    Graph(int width, int height)： 构造函数根据宽度和高度初始化图，创建顶点集合和边集合。
    void mergeRegions(int vertex1, int vertex2)： 合并两个顶点所在的区域。
    int findRegion(int vertex)：查找顶点所在的区域。
    void createAdjGraphClass(String[] vertices, Pixel[] edges)：根据顶点和边的数组创建邻接表。
    void Prim(int startVertex, double threshold)：从顶点 startVertex 开始，应用阈值为 threshold 的 Prim 算法。
    void addEdgesToQueue(int vertex, double threshold)： 将顶点邻接边添加到优先队列中，用于 Prim 算法。
}
